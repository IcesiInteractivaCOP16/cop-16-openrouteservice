name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH key
      run: |
        # Create the .ssh directory if it doesn't exist
        mkdir -p ~/.ssh
        
        # Store the PEM key in a temporary file
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/openrouteservice_pem.pem
        chmod 600 ~/.ssh/openrouteservice_pem.pem

    - name: Add SSH known hosts
      run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Copy files to EC2 and run verification and cleanup script
      run: |
        # Variables
        EC2_USER=${{ secrets.EC2_USER }}  # Change if needed
        EC2_HOST=${{ secrets.EC2_HOST }}  # EC2 IP or DNS
        PEM_FILE=~/.ssh/openrouteservice_pem.pem  # Path to PEM file

        # Create the app directory on the EC2 instance
        ssh -i $PEM_FILE $EC2_USER@$EC2_HOST "mkdir -p /home/$EC2_USER/app"

        # Copy files to EC2, including the script and docker-compose file
        scp -i $PEM_FILE -r ./ors-docker $EC2_USER@$EC2_HOST:/home/$EC2_USER/app/
        scp -i $PEM_FILE -r ./docker-compose.yml $EC2_USER@$EC2_HOST:/home/$EC2_USER/app/
        scp -i $PEM_FILE -r ./verify_and_cleanup.sh $EC2_USER@$EC2_HOST:/home/$EC2_USER/app/


        # Connect and run the verification and cleanup script
        ssh -i $PEM_FILE $EC2_USER@$EC2_HOST << 'EOF'

          APP_DIR="/home/${{ secrets.EC2_USER }}/app"
          if [ ! -d "\$APP_DIR" ]; then
            echo "App directory does not exist!"
            exit 1
          fi

          # Navigate to the app directory
          cd "\$APP_DIR" || exit

          # Check if the script exists before attempting to run it
          if [ -f "verify_and_cleanup.sh" ]; then
            chmod +x verify_and_cleanup.sh
            ./verify_and_cleanup.sh
          else
            echo "Script verify_and_cleanup.sh not found!"
            exit 1
          fi

          # Check if Docker and Docker Compose are installed
          if ! command -v docker &> /dev/null; then
            echo "Docker is not installed."
            exit 1
          fi

          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose is not installed."
            exit 1
          fi

          # Run Docker Compose
          docker-compose up -d --build
        EOF
